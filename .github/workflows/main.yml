name: GITHUB-CICD
on: [push]
env:
   ARTIFACTORY_URL: http://10.53.105.21:8082/
   ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
   ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
   IMAGE_NAME: pavan9999/github-actions
   IMAGE_TAG: spring-petclinic
   AWS_REGION: us-east-1
   ECS_CLUSTER: ECS-Cluster
   ECS_SERVICE: github-svc
   ECS_TASK_DEFINITION: github-task
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: "17"
          distribution: adopt
          cache: maven
      - name: Maven Build 
        run: mvn clean package
      # SOnarQube Code Scan and analysis
      - name: SonarQube-Scan Stage
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # SOnarQube Code Quality 
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Dependency Check(SCA)
      - name: Run dependency check
        run: mvn org.owasp:dependency-check-maven:check
      
      # Upload Dependency check report
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: ./target/dependency-check-report.html
     # Junit Testing
      - name: Build and Test
        run: mvn test
      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v2
        with:
         name: surefire-reports
         path: ./target/surefire-reports/*
     # Build Docker image and Push into Docker Hub 
      - name: Docker-Image-Build & Push
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${IMAGE_NAME}
          tags: ${IMAGE_TAG}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
     # Docker Image Scan Trivy Tool installing
      - name: Install Trivy 
        run: |
         sudo apt-get update
          sudo apt-get install -y curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin
      #  Docker Image Scanning
      - name: Scan Docker Image
        run: |
           trivy image ${IMAGE_NAME}:${IMAGE_TAG}   
      - name: Upload scan results
        uses: actions/upload-artifact@v2
        with:
           name: trivy-scan-results
           path: ./*      
  Selenium-test:
     needs: build
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: build artifacts
        run: mvn clean package
      - name:  Install Google Chrome # Using shell script to install Google Chrome
        run: |
           chmod +x ./SeleniumGridExecution/scripts/InstallChrome.sh
           ./SeleniumGridExecution/scripts/InstallChrome.sh 
      - name: Build with Maven
        run: |
           cd SeleniumGridExecution
           mvn test
      - name: upload all test files
        uses: actions/upload-artifact@v2
        with:
         name: selenium-results
         path: ./*
